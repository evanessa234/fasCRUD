async(req, res) => {
    const body =req.body;
    try {
        const conn = await db();
        await conn.query('START TRANSACTION');
        const result = await conn.query(``);
        await conn.query('COMMIT'); // this step is only when we make any changes in database
        res.type('json');
        res.status(200).json({
            success: 1,
            data: result
        });
    } catch (err) {
        res.status(500).json({
            success: 0,
            error: err,
            message: "Database connection error"

        });
    } finally{
        await conn.release();
        await conn.destroy();
    }
}

INSERT INTO course (fromAcadYr, toAcadYr, sem, subjectCode, courseName, credits, practHr, totPractHr) VALUES (2020, 2021, 8, "CSL802", "ML", 4, 2, 12) WHERE EXISTS(SELECT * FROM course WHERE courseID = 5)

INSERT INTO course (fromAcadYr, toAcadYr, sem, subjectCode, courseName, credits, practHr, totPractHr) VALUES (2020, 2021, 8, "CSL802", "ML", 4, 2, 12) ON DUPLICATE KEY UPDATE
fromAcadYr = 2020, toAcadYr = 2021, sem = 8, subjectCode = "CSL802", courseName = "AOA", credits = 3, practHr = 2, totPractHr = 12

**** INSERT INTO course (fromAcadYr, toAcadYr, sem, subjectCode, courseName, credits, practHr, totPractHr) VALUES (2020, 2021, 7, "CS7802", "ML", 4, 2, 12) ON DUPLICATE KEY UPDATE
fromAcadYr = 2020, toAcadYr = 2021, sem = 7, subjectCode = "CS7802", courseName = "AOAOA", credits = 3, practHr = 2, totPractHr = 12


postAndUpdateCourseDetails:
{
    "classOrLab": "class" 
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode":"CSC303",
    "courseName":"SPA",
    "credits": 6,
    "lectHr": 4,
    "totLectHr": 52
}

getCourseDetails: 
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303"
}

postAndUpdateObjectives:
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303",
    "objNo": 1,
    "objName": "to study..."
}

getObjectives:
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303"
}

postAndUpdateCO:
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303",  
    "CO_no": "CO1",
    "CO_name": "Understand new models ...",
    "weightagePercent": 15,
    "durationHr": 8,
    "noOfExp": (only if lab subject then this too. Put int value)    
}

getCO:

{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303",
}

postAndUpdatePO: 
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303",
    "PO_no": "PO1",
    "PO_title" "this is PO1",
    "PO_description": "PO description......"
}

getPO: 
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303",
}

postAndUpdatePSO: 
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303",
    "PSO_no": "PSO1",
    "PSO_description": "this is PSO1..."
}

getPSO: 
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303",
}

postAndUpdateDqaTeamFeedback:
{
    "fromAcadYr": "2020",
    "toAcadYr": "2021",
    "sem": "5",
    "subjectCode": "CSC501",
    "BTlevel": 0 ,
    "grammar":1,
    "commentCO":"not really satisfied please make changes",
    "properDistriMap":1,
    "commentMap":"map",
    "syllabusCoverage":1,
    "COweightage":1,
    "chp_expWeightage":1,
    "commentWeightage":"weightage",
    "CO_coverageAssMethod":1,
    "marksDistribution":1,
    "QuestionQuality":"quality",
    "commentAssMethod":"method",
    "typeOfExp":"exp",
    "timeJustified":1,
    "modernToolsUsed":1,
    "OutOfSyllabus":1
}

getDqaTeamFeedback:
{
    "fromAcadYr": 2032,
    "toAcadYr": 2033,
    "sem": 3,
    "subjectCode": "CSC303",
}

***** Output of getDqaTeamFeedback will be ---
{
    "success": 1,
    "data": [
        {
            "courseID": 3,
            "BTlevel": {
                "type": "Buffer",
                "data": [
                    0
                ]
            },
            "grammar": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "commentCO": "not really satisfied please make changes",
            "properDistriMap": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "commentMap": "map",
            "syllabusCoverage": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "COweightage": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "chp_expWeightage": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "commentWeightage": "weightage",
            "CO_coverageAssMethod": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "marksDistribution": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "QuestionQuality": "quality",
            "commentAssMethod": "method",
            "typeOfExp": "exp",
            "timeJustified": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "modernToolsUsed": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "OutOfSyllabus": {
                "type": "Buffer",
                "data": [
                    1
                ]
            }
        }
    ]
}

updateHodFeedback: (use ".put" method for CRUD function in react)
{
    "fromAcadYr": "2020",
    "toAcadYr": "2021",
    "sem": "5",
    "subjectCode": "CSC501",
    "HODapproved": 1,
    "HODcomment": "yes very nice"
}

getHODFeedback:
{
    "success": 1,
    "data": [
        {
            "HODapproved": {
                "type": "Buffer",
                "data": [
                    1
                ]
            },
            "HODcomment": "yes very nice",
            "HODcommentTime": "2020-08-01T18:30:52.000Z"
        }
    ]
}
